version: '3'
services:

  webserver:
    image: nginx:alpine
    container_name: ngix
    restart: unless-stopped
    tty: true
    ports:
      - "85:80"
      - "443:443"
    volumes:
      - ./src/:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/default.conf
    networks:
      - app-network

  workspace:
    container_name: workspace_dev
    build:
      context: src
      dockerfile: Dockerfile
    # image: workspace:dev
    environment:
      SERVICE_NAME: workspace
      SERVICE_TAGS: dev
    tty: true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    working_dir: /var/www/html
    restart: unless-stopped
    volumes:
      - ./src/:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
  db:
    image: mariadb
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: workspace_db
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: brayan
      MYSQL_PASSWORD: password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/my.cnf:/var/lib/mysql/my.cnf
    networks:
      - app-network
  # cron:
  #   build:
  #     context: .
  #     dockerfile: cron.dockerfile
  #   container_name: cron
  #   restart: unless-stopped
  #   volumes:
  #     - ./src:/var/www/html
  #   networks:
  #     - app-network
  # mailhog:

  #   image: 'mailhog/mailhog:latest'
  #   ports:
  #     - '${FORWARD_MAILHOG_PORT:-1025}:1025'
  #     - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
  #   networks:
  #     - app-network
  # redis:
  #   image: 'redis:alpine'
  #   container_name: serv_redis
  #   ports:
  #     - '${FORWARD_REDIS_PORT:-6379}:6379'
  #   volumes:
  #     - './src:/var/www/html'
  #   networks:
  #     - app-network
  #   healthcheck:
  #     test: [ "CMD", "redis-cli", "ping" ]
  #     retries: 3
  #     timeout: 5s
networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
